---
# yamllint disable rule:line-length
# Role variable returned variables are scoped to the current play only (e.g.
# converge.yml) and must be tested between each application of the role. Test
# these values while converging versus verify.yml (where scoping will prevent)
# testing these values.
- name: 'Binary download | converge | binary, specifier'
  hosts: 'all'
  gather_facts: false
  tasks:
    - name: 'Binary download | converge | binary, specifier | URL | apply r_pufky.srv.github'
      ansible.builtin.include_role:
        name: 'r_pufky.srv.github'
      vars:
        github_binary_enable: true
        github_binary_specifier: 'v'
        github_binary_url: '{VERSION}/Binary.{BARE_VERSION}.x86-64.tar.gz'
        github_testing_archive: '{{ lookup("env", "MOLECULE_PROJECT_DIRECTORY") }}/molecule/files/test_archive_v1.0.0.tar.gz'
        github_repo_archive_type: 'tar.gz'
        github_repo_owner: 'leetreleaser'
        github_repo_repo: 'test_repo'
        github_repo_release: 'latest'
        github_extract_dest: '/opt/test_repo_gz'

    - name: 'Binary download | converge | binary, specifier | URL | assert parameters'
      ansible.builtin.assert:
        that:
          - _github_target == 'v1.0.0'
          - _github_target_url == 'https://github.com/leetreleaser/test_repo/releases/download/v1.0.0/Binary.1.0.0.x86-64.tar.gz'
          - _github_archive == '/tmp/test_repo-v1.0.0.tar.gz'
          - _github_dir == '/opt/test_repo_gz/test_repo-v1.0.0'
          - _github_remote_metadata is mapping

    - name: 'Binary download | converge | binary, specifier | partial URL | apply r_pufky.srv.github'
      ansible.builtin.include_role:
        name: 'r_pufky.srv.github'
      vars:
        github_binary_enable: true
        github_binary_specifier: 'v'
        github_binary_url: '{VERSION}/Binary.x86-64.tar.gz'
        github_testing_archive: '{{ lookup("env", "MOLECULE_PROJECT_DIRECTORY") }}/molecule/files/test_archive_v1.0.0.tar.gz'
        github_repo_archive_type: 'tar.gz'
        github_repo_owner: 'leetreleaser'
        github_repo_repo: 'test_repo'
        github_repo_release: 'latest'
        github_extract_dest: '/opt/test_repo_gz_partial'

    - name: 'Binary download | converge | binary, specifier | partial URL | assert parameters'
      ansible.builtin.assert:
        that:
          - _github_target == 'v1.0.0'
          - _github_target_url == 'https://github.com/leetreleaser/test_repo/releases/download/v1.0.0/Binary.x86-64.tar.gz'
          - _github_archive == '/tmp/test_repo-v1.0.0.tar.gz'
          - _github_dir == '/opt/test_repo_gz_partial/test_repo-v1.0.0'
          - _github_remote_metadata is mapping

    - name: 'Binary download | converge | binary, specifier | no URL | expected failure'
      block:
        - name: 'Binary download | converge | binary, specifier | no URL | expected failure | apply r_pufky.srv.github'
          ansible.builtin.include_role:
            name: 'r_pufky.srv.github'
          vars:
            github_binary_enable: true
            github_binary_specifier: 'v'
            github_testing_archive: '{{ lookup("env", "MOLECULE_PROJECT_DIRECTORY") }}/molecule/files/test_archive_v1.0.0.tar.gz'
            github_repo_archive_type: 'tar.gz'
            github_repo_owner: 'leetreleaser'
            github_repo_repo: 'test_repo'
            github_repo_release: 'latest'
            github_extract_dest: '/opt/test_repo_gz_fail'
          register: _test_failure
      rescue:
        - name: 'Binary download | converge | binary, specifier | no URL | expected failure | assert failure'
          ansible.builtin.assert:
            that:
              - not _test_failure.changed
            fail_msg: >
              github_binary_enable without github_binary_url should FAIL.

- name: 'Binary download | converge | binary, no specifier | URL'
  hosts: 'all'
  gather_facts: false
  tasks:
    - name: 'Binary download | converge | binary, no specifier | URL | apply r_pufky.srv.github'
      ansible.builtin.include_role:
        name: 'r_pufky.srv.github'
      vars:
        github_binary_enable: true
        github_binary_url: '{VERSION}/Binary.{BARE_VERSION}.x86-64.tar.gz'
        github_testing_archive: '{{ lookup("env", "MOLECULE_PROJECT_DIRECTORY") }}/molecule/files/test_archive_v1.0.0.tar.gz'
        github_repo_archive_type: 'tar.gz'
        github_repo_owner: 'leetreleaser'
        github_repo_repo: 'test_repo'
        github_repo_release: 'latest'
        github_extract_dest: '/opt/test_repo_gz'

    - name: 'Binary download | converge | binary, no specifier | URL | assert parameters'
      ansible.builtin.assert:
        that:
          - _github_target == 'v1.0.0'
          - _github_target_url == 'https://github.com/leetreleaser/test_repo/releases/download/v1.0.0/Binary.v1.0.0.x86-64.tar.gz'
          - _github_archive == '/tmp/test_repo-v1.0.0.tar.gz'
          - _github_dir == '/opt/test_repo_gz/test_repo-v1.0.0'
          - _github_remote_metadata is mapping

    - name: 'Binary download | converge | binary, specifier | partial URL | apply r_pufky.srv.github'
      ansible.builtin.include_role:
        name: 'r_pufky.srv.github'
      vars:
        github_binary_enable: true
        github_binary_specifier: 'v'
        github_binary_url: '{VERSION}/Binary.x86-64.tar.gz'
        github_testing_archive: '{{ lookup("env", "MOLECULE_PROJECT_DIRECTORY") }}/molecule/files/test_archive_v1.0.0.tar.gz'
        github_repo_archive_type: 'tar.gz'
        github_repo_owner: 'leetreleaser'
        github_repo_repo: 'test_repo'
        github_repo_release: 'latest'
        github_extract_dest: '/opt/test_repo_gz_partial'

    - name: 'Binary download | converge | binary, specifier | partial URL | assert parameters'
      ansible.builtin.assert:
        that:
          - _github_target == 'v1.0.0'
          - _github_target_url == 'https://github.com/leetreleaser/test_repo/releases/download/v1.0.0/Binary.x86-64.tar.gz'
          - _github_archive == '/tmp/test_repo-v1.0.0.tar.gz'
          - _github_dir == '/opt/test_repo_gz_partial/test_repo-v1.0.0'
          - _github_remote_metadata is mapping
